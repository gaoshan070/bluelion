server:
  port: 8502
  compression:
    enabled: true
    mime-types:
    - application/x-gzip
    - text/html
    - application/json
    min-response-size: 100
    connection-timeout: 10s
logging:
  pattern:
    console: "%d - %msg%n"
    file: "%d{yyyy/MM/dd-HH:mm:ss} [%thread] %-5level - %msg%n"
  level:
    org.springframework.cloud: info
    org.springframework.cloud.gateway: info
    com.bluelion: info
  file: /data/log/bluelion/gateway/gateway.log

spring:
  profiles:
    active: @activatedProperties@
  devtools:
    restart:
      enabled: true
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
#      default-filters:
#      - name: RequestRateLimiter
#        args:
#          redis-rate-limiter.replenishRate: 2  #流速 每秒
#          redis-rate-limiter.burstCapacity: 10   #令牌桶的容积
#          rate-limiter: "#{@defaultRedisRateLimiter}"  #SPEL表达式去的对应的bean
#          key-resolver: "#{@apiKeyResolver}" #SPEL表达式去的对应的bean
#      routes:
#        - id: limit_route
#          uri: http://localhost:8502
#          predicates:
#            - Method=POST
#            - Path=/*
#          filters:
#            - name: RequestRateLimiter
#              args:
#                key-resolver: '#{@apiKeyResolver}'
#                redis-rate-limiter.replenishRate: 1
#                redis-rate-limiter.burstCapacity: 3
#为各个服务设置熔断超时时间，默认为1秒，设置为5秒
hystrix.command.userHystrix.execution.isolation.thread.timeoutInMilliseconds: 5000
hystrix.command.orderHystrix.execution.isolation.thread.timeoutInMilliseconds: 5000
hystrix.command.contentHystrix.execution.isolation.thread.timeoutInMilliseconds: 5000
#      routes:
#      - id: rewritepath_route
#        uri: http://localhost:8501
#        predicates:
#        - Path=/user/**
#        filters:
#        - RewritePath=/user/(?<segment>.*), /$\{segment}
#---
#spring:
#  profiles: add_request_header_route
#  cloud:
#    gateway:
#      routes:
#      - id: add_request_header_route
#        uri: http://httpbin.org:80/get
#        filters:
#        - AddRequestHeader=X-Request-Foo, Bar
#        predicates:
#        - Method=GET
#---
#spring:
#  profiles: elapse_route
#  cloud:
#    gateway:
#      routes:
#      - id: elapse_route
#        uri: http://localhost:8501
#        filters:
#        - Customer=true
#        - RewritePath=/user/(?<segment>.*), /$\{segment}
#        predicates:
#        - Method=GET
#        - Path=/user/**
#      - id: auth_route
#          uri: http://localhost:8503
#          filters:
#          - Customer=true
#          - RewritePath=/oauth/(?<segment>.*), /$\{segment}
#          predicates:
#          - Method=GET
#          - Path=/auth/**
